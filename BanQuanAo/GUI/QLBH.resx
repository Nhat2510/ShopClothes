<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQixwQggAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQxzzzzzzywwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTzzzzzzzzzxgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzzzzzz
        zzzzzzzzywAAAAAAAAAAAAAAAAAAAAAAAAAAAAATzzzzzzzzzzzzzzzwgAAAAAAAAAAAAAAAAAAAAAAA
        AAAADTzzzzzzzzzzzzzzzzgAAAAAAAAAAAAAAAAAAAAAAAAAABTzzzzzzzzzzzzzzzzzygAAAAAAAAAA
        AAAAAAAAAAAAAAABzzzzzzzzzzzzzzzzzzywAAAAAAAAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzzzzzz
        zwAAAAAAAAAAAAAAAAAAAAAAAAABTzzzzzzzzzzzzzzzzzygAAAAAAAAAAAAAAAAAAAAAAAAABzzzzzz
        zzzzzzzzzzzzywAAAAAAAAAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzzzzzwAAAAAAAAAAAAAAAAAAAAA
        AAAAAATzzzzzzzzzzzzzzzzzwgAAAAAAAAAAAAAAAAAAAAAAAAAADjzzzzzzzzzzzzzzzzQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzzzwAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTTzzzzzzzzzzzz
        hgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDTzzzzzzzzzziAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
        DzTzzzzzzjxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCTjDDRhAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggQQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxjxzzzzyzyQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATzzzzzzzzzzz
        zzwgAAAAAAAAAAAAAAAAAAAAAAAAAAAABjzzzzzzzzzzzzzzzyQAAAAAAAAAAAAAAAAAAAAAAAAAAAxz
        zzzzzzzzzzzzzzzywwAAAAAAAAAAAAAAAAAAAAAAAAAhzzzzzzzzzzzzzzzzzzywQAAAAAAAAAAAAAAA
        AAAAAAAABzzzzzzzzzzzzzzzzzzzzywAAAAAAAAAAAAAAAAAAAAAADTzzzzzzzzzzzzzzzzzzzzzzgAA
        AAAAAAAAAAAAAAAAAABBzzzzzzzzzzzzzzzzzzzzzzyyAAAAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzz
        zzzzzzzzzwAAAAAAAAAAAAAAAAAAAABTzzzzzzzzzzzzzzzzzzzzzzzygAAAAAAAAAAAAAAAAAAARzzz
        zzzzzzzzzzzzzzzzzzzzzywgAAAAAAAAAAAAAAAAAADzzzzzzzzzzzzzzzzzzzzzzzzzwAAAAAAAAAAA
        AAAAAAABTzzzzzzzzzzzzzzzzzzzzzzzzzygAAAAAAAAAAAAAAAAABDzzzzzzzzzzzzzzzzzzzzzzzzz
        yAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAACw/9oACAEDAQE/EARP/8QAFBEBAAAAAAAAAAAAAAAA
        AAAAsP/aAAgBAgEBPxAET//EACwQAQABAgYABwACAgMBAAAAAAERAFAhMUFRYXFAYIGRobHBMPDR8RCA
        4aD/2gAIAQEAAT8Q/wDtcBchrme1cz2pEzHyoCoBXYrGCHfBWp6ArO+6rKFQygdH/LnE7KzhUyvuq1PQ
        FYww74qRUIjs+TYQvLQoCGf+mdGxzEY/ymxzEY0DLH/TOoQvLR8knXJoVANLbl60IEGQHgVAkzEqQaW/
        L0p64NHyM3LnWvVRVG7q+FiqdnUpuHGNO/ImFCMxv7oAAAGQeHAEAjmNY0JzO3ryF2GLpy+L7DB15PIE
        8HDNvvxscHDMvu/YWYvu2oIIMvGpJDlWFmL7tr5nrubsb0GEB48MJCs9cydze94N6nRYcG9TsvUwH1FB
        BFhSSKiA+ovMIWp6aWOULW9NbwwurHqgABAEFjAgkiQ0yurDq7yAYCHbZYAMBLsu851bZU51ZdgShvUK
        6BZZV1CkhTa684Gz8YO69QV+LP3BH4uonhVnEcouvyln+EurjkE+LO54APi6zXpZ5r0uvDI0MgmtlWBX
        SuWRu29MB9LLvTIPW7zPnMdNlifOZ6LvCFgJfllhAyEP27oGAjJQC6Me7GCujDukTEVlvEamf/pY51Mv
        /C8qbCSVlHierDlHie6U2UlvWJWPhw2HErHx5b2YMmdBK4ePJv48JXDw4N6cWXO+PFHyUXXs2fGt16N2
        nin4L9nzXqFOTK+PFuTA+ay5j0DyBnFWZk0ZnGpqeJcxjQ1ayijIyPIQmM6mjUEGHNfnh4IsuQ/aUznQ
        0PIiAiJklQR7f9oSJMkfBqRBmrUk+/8AykRFXNfI8oU3NGoIOTSjQk1H+d0INVqSDk0qUK7Gh5Lm3QNY
        UHLA1GQVtgoBKE4/hASgOanJK2xVhQcsTU27B8oIz0DWkBwmjfHSUGr6U/2hX+0KDV9aO+elrSA4RSM9
        g/8AWcFyJ6rPx0qFy9ihtXuV/aKf9RSWr3KRz9isvHapEzI78nsQ7wTWPROWWvhLwrKkd8VFx1hH8Jcd
        4TWdA74K+UvGseicMNMQ7yR5IBQAq6VDJN7N7VFpfae1GwQbBHgTYINkmptL7T2qWSb2b2pFIiJp5DBU
        AVdCo9eOgUGO7F8OFBrswan146IiiImj5AdEOb+Ufma3n4s/I0nOnVHH/b6SBVgBRAxdGk7oAACA08ag
        iJI6NEHB1aXqmQIMEb0TlOroVNTFzf5YZq4OR/aZwnfRvELoDMyKAn26rY0J9Oo1C6RyMm7DsM9goGMB
        rq2VGMjrqUuxz3C6Bhi5uxvQgO3VbOoDp1GgwxMnc3uTGEpgKhLDnPy0wkgzn5TOEBhLjgXsXQ3teBex
        NTe4QYNf/CgAAytaCI5VJg1/8LcFAJVgKDXWK3baGmsVs0FIIRhLbJlsctvgy3OG2IAJVgoCcwx5dbeD
        OaYcOlIgIRhtcCzAn10uMgTU9dbXOBiS/LjGBiQ/bUgmgUQmQQXElMkhpFNQtMy8pPW5xJyk9bT/AGCC
        5/2CG07xYn1xue8WI9MbQIDdioI0AuckaiUJDZiz81H7uvFT+7OfcrqfcrP936uv1fqz/Z+rr9H6s6j1
        Pq6qfQ+rPMOJdZhzPCf/2Q==
</value>
  </data>
</root>